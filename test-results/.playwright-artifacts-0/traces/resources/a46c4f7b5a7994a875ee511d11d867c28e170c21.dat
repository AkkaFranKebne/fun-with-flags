import __vite__cjsImport0_react from "/node_modules/.vite/deps/react.js?v=b175f560"; const useState = __vite__cjsImport0_react["useState"];
export default (input) => {
  const [touchStartX, setTouchStartX] = useState(0);
  const [touchEndX, setTouchEndX] = useState(0);
  const [touchStartY, setTouchStartY] = useState(0);
  const [touchEndY, setTouchEndY] = useState(0);
  const minSwipeDistance = 20;
  const onTouchStart = (e) => {
    setTouchEndX(0);
    setTouchEndY(0);
    setTouchStartX(e.targetTouches[0].clientX);
    setTouchStartY(e.targetTouches[0].clientY);
  };
  const onTouchMove = (e) => {
    setTouchEndX(e.targetTouches[0].clientX);
    setTouchEndY(e.targetTouches[0].clientY);
  };
  const onTouchEnd = () => {
    const distanceX = touchStartX - touchEndX;
    const distanceY = touchStartY - touchEndY;
    const isLeftSwipe = distanceX > minSwipeDistance;
    const isRightSwipe = distanceX < -minSwipeDistance;
    const isUpSwipe = distanceY > minSwipeDistance;
    const isDownSwipe = distanceY < -minSwipeDistance;
    if (isLeftSwipe) {
      input.onSwipedLeft();
    }
    if (isRightSwipe) {
      input.onSwipedRight();
    }
    if (isUpSwipe) {
      input.onSwipedUp();
    }
    if (isDownSwipe) {
      input.onSwipedDown();
    }
  };
  return {
    onTouchStart,
    onTouchMove,
    onTouchEnd
  };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZVN3aXBlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VG91Y2hFdmVudCwgdXNlU3RhdGV9IGZyb20gXCJyZWFjdFwiO1xuXG5pbnRlcmZhY2UgU3dpcGVJbnB1dCB7XG4gICAgb25Td2lwZWRMZWZ0OiAoKSA9PiB2b2lkXG4gICAgb25Td2lwZWRSaWdodDogKCkgPT4gdm9pZFxuICAgIG9uU3dpcGVkVXA6ICgpID0+IHZvaWRcbiAgICBvblN3aXBlZERvd246ICgpID0+IHZvaWRcbn1cblxuaW50ZXJmYWNlIFN3aXBlT3V0cHV0IHtcbiAgICBvblRvdWNoU3RhcnQ6IChlOiBUb3VjaEV2ZW50KSA9PiB2b2lkXG4gICAgb25Ub3VjaE1vdmU6IChlOiBUb3VjaEV2ZW50KSA9PiB2b2lkXG4gICAgb25Ub3VjaEVuZDogKCkgPT4gdm9pZFxufVxuXG5leHBvcnQgZGVmYXVsdCAoaW5wdXQ6IFN3aXBlSW5wdXQpOiBTd2lwZU91dHB1dCA9PiB7XG4gICAgY29uc3QgW3RvdWNoU3RhcnRYLCBzZXRUb3VjaFN0YXJ0WF0gPSB1c2VTdGF0ZSgwKTtcbiAgICBjb25zdCBbdG91Y2hFbmRYLCBzZXRUb3VjaEVuZFhdID0gdXNlU3RhdGUoMCk7XG4gICAgY29uc3QgW3RvdWNoU3RhcnRZLCBzZXRUb3VjaFN0YXJ0WV0gPSB1c2VTdGF0ZSgwKTtcbiAgICBjb25zdCBbdG91Y2hFbmRZLCBzZXRUb3VjaEVuZFldID0gdXNlU3RhdGUoMCk7XG5cbiAgICAvLyB0aGUgbWluaW1hbCBkaXN0YW5jZSBjb25zaWRlcmVkIGFzIGEgdmFsaWQgc3dpcGVcbiAgICBjb25zdCBtaW5Td2lwZURpc3RhbmNlID0gMjA7XG5cbiAgICBjb25zdCBvblRvdWNoU3RhcnQgPSAoZTogVG91Y2hFdmVudCkgPT4ge1xuICAgICAgICBzZXRUb3VjaEVuZFgoMCk7IC8vIG90aGVyd2lzZSB0aGUgc3dpcGUgaXMgZmlyZWQgZXZlbiB3aXRoIHVzdWFsIHRvdWNoIGV2ZW50c1xuICAgICAgICBzZXRUb3VjaEVuZFkoMCk7XG4gICAgICAgIHNldFRvdWNoU3RhcnRYKGUudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRYKTsgLy8gd2hlcmUgdG91Y2ggc3RhcnRzXG4gICAgICAgIHNldFRvdWNoU3RhcnRZKGUudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRZKTsgXG4gICAgfVxuXG4gICAgY29uc3Qgb25Ub3VjaE1vdmUgPSAoZTogVG91Y2hFdmVudCkgPT4ge1xuICAgICAgc2V0VG91Y2hFbmRYKGUudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRYKTtcbiAgICAgIHNldFRvdWNoRW5kWShlLnRhcmdldFRvdWNoZXNbMF0uY2xpZW50WSk7XG4gICAgfSAvLyBob3cgdG91Y2ggZGV2ZWxvcGVzXG5cbiAgICBjb25zdCBvblRvdWNoRW5kID0gKCkgPT4ge1xuICAgICAgICAvL2lmICghdG91Y2hTdGFydFggfHwgIXRvdWNoRW5kWCApIHJldHVybjtcbiAgICAgICAgY29uc3QgZGlzdGFuY2VYID0gdG91Y2hTdGFydFggLSB0b3VjaEVuZFg7XG4gICAgICAgIGNvbnN0IGRpc3RhbmNlWSA9IHRvdWNoU3RhcnRZIC0gdG91Y2hFbmRZO1xuICAgICAgICBjb25zdCBpc0xlZnRTd2lwZSA9IGRpc3RhbmNlWCA+IG1pblN3aXBlRGlzdGFuY2U7XG4gICAgICAgIGNvbnN0IGlzUmlnaHRTd2lwZSA9IGRpc3RhbmNlWCA8IC1taW5Td2lwZURpc3RhbmNlO1xuICAgICAgICBjb25zdCBpc1VwU3dpcGUgPSBkaXN0YW5jZVkgPiBtaW5Td2lwZURpc3RhbmNlO1xuICAgICAgICBjb25zdCBpc0Rvd25Td2lwZSA9IGRpc3RhbmNlWSA8IC1taW5Td2lwZURpc3RhbmNlO1xuICAgICAgICBpZiAoaXNMZWZ0U3dpcGUpIHtcbiAgICAgICAgICAgIGlucHV0Lm9uU3dpcGVkTGVmdCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1JpZ2h0U3dpcGUpIHtcbiAgICAgICAgICAgIGlucHV0Lm9uU3dpcGVkUmlnaHQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNVcFN3aXBlKSB7XG4gICAgICAgICAgaW5wdXQub25Td2lwZWRVcCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0Rvd25Td2lwZSkge1xuICAgICAgICAgICAgaW5wdXQub25Td2lwZWREb3duKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBvblRvdWNoU3RhcnQsXG4gICAgICAgIG9uVG91Y2hNb3ZlLFxuICAgICAgICBvblRvdWNoRW5kXG4gICAgfVxufSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBb0IsZ0JBQWU7QUFlbkMsZUFBZSxDQUFDLFVBQW1DO0FBQy9DLFFBQU0sQ0FBQyxhQUFhLGNBQWMsSUFBSSxTQUFTLENBQUM7QUFDaEQsUUFBTSxDQUFDLFdBQVcsWUFBWSxJQUFJLFNBQVMsQ0FBQztBQUM1QyxRQUFNLENBQUMsYUFBYSxjQUFjLElBQUksU0FBUyxDQUFDO0FBQ2hELFFBQU0sQ0FBQyxXQUFXLFlBQVksSUFBSSxTQUFTLENBQUM7QUFHNUMsUUFBTSxtQkFBbUI7QUFFekIsUUFBTSxlQUFlLENBQUMsTUFBa0I7QUFDcEMsaUJBQWEsQ0FBQztBQUNkLGlCQUFhLENBQUM7QUFDZCxtQkFBZSxFQUFFLGNBQWMsQ0FBQyxFQUFFLE9BQU87QUFDekMsbUJBQWUsRUFBRSxjQUFjLENBQUMsRUFBRSxPQUFPO0FBQUEsRUFDN0M7QUFFQSxRQUFNLGNBQWMsQ0FBQyxNQUFrQjtBQUNyQyxpQkFBYSxFQUFFLGNBQWMsQ0FBQyxFQUFFLE9BQU87QUFDdkMsaUJBQWEsRUFBRSxjQUFjLENBQUMsRUFBRSxPQUFPO0FBQUEsRUFDekM7QUFFQSxRQUFNLGFBQWEsTUFBTTtBQUVyQixVQUFNLFlBQVksY0FBYztBQUNoQyxVQUFNLFlBQVksY0FBYztBQUNoQyxVQUFNLGNBQWMsWUFBWTtBQUNoQyxVQUFNLGVBQWUsWUFBWSxDQUFDO0FBQ2xDLFVBQU0sWUFBWSxZQUFZO0FBQzlCLFVBQU0sY0FBYyxZQUFZLENBQUM7QUFDakMsUUFBSSxhQUFhO0FBQ2IsWUFBTSxhQUFhO0FBQUEsSUFDdkI7QUFDQSxRQUFJLGNBQWM7QUFDZCxZQUFNLGNBQWM7QUFBQSxJQUN4QjtBQUNBLFFBQUksV0FBVztBQUNiLFlBQU0sV0FBVztBQUFBLElBQ25CO0FBQ0EsUUFBSSxhQUFhO0FBQ2IsWUFBTSxhQUFhO0FBQUEsSUFDdkI7QUFBQSxFQUNKO0FBRUEsU0FBTztBQUFBLElBQ0g7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLEVBQ0o7QUFDSjsiLCJuYW1lcyI6W119